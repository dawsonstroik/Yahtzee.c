#include <stdio.h>
#include <string.h>
#include <time.h>
#include <stdlib.h>

#define MAX_ROLLS 3
#define MAX_DICE 5
#define MAX_PLAYERS 10
#define MAX_NAME_LENGTH 50
#define SENTINEL 0

void howToPlay(){
	printf("Yahtzee is a game played with 5 dice. The objective is to get the highest score possible. With the five dice you can shake up to 3 times to get ");
	}

void commands(){
	printf("Here is the list of commands to use while playing this game:\nRules: Lists the rules of Yahtzee\nScore: Prints out the score of each player\nCommands: Will reprint this list\n");
	}

void printDie(){
	}

int rollDie(){
	//return 5;
	return rand() % 6 + 1;
}

void yahtzee(int score[MAX_PLAYERS][15], char playerNames[MAX_PLAYERS][MAX_NAME_LENGTH],int numPlayers){
	int rounds = 1;
	while(rounds <= 13){
		printf("It is round %d out of 13\n", rounds);
		int players = 0;
		while(players <= numPlayers){//while loop that goes through players
			int array[5][2];
			int reroll[5];
			int input;
			int roll = 1;

			printf("It is %s turn:\n",playerNames[players]);
			while(roll < MAX_ROLLS ){//while loop for rolling and rerolling dice
				for(int i = 0; i < 5; i ++){
					if(roll == 1){
						array[i][1] = rollDie();
						array[i][2] = 0;
					}
					printf("%d   ", array[i][1]);
				}

				printf("\nType in the dice you want to reroll with spaces between them or any other command to see your card or score. Type 0 when you are finshed\n");

				while(1){
					scanf("%d", &input);
					if(input == SENTINEL){
						break;
					}
					else{
						for(int i = 0; i < 5; i++){
							if(input == array[i][1] && array[i][2] == 0){
								//valid reroll
								reroll[i] = input;
								array[i][2] = 1; //So the same number cant be rerolled
								i = 5 ;
							}
							if(i ==4){
								printf("%d is not in the dice you rolled\n", input);
							}
						}
					}
					/*for(int i = 0; i < 5; i++){//resetting dummy value used to prevent the same number being rerolled multiple times
						array[i][2] = 0;
					}*/
					//memset(reroll, 0, sizeof(reroll));
				}
				 for(int i = 0; i < 5; i++){//resetting dummy value used to prevent the same number being rerolled multiple times
                                                array[i][2] = 0;
                                        }
				for(int i = 0; i < 5; i++){//rerolls dice that were selected
					if(reroll[i] != 0){
						array[i][1] = rollDie();
					}
				}
				roll++;
			}
			printf("End of %s's turn\n", playerNames[players]);
			for(int i = 0; i < 5; i ++){//Prints the final 5 dice
				printf("%d ", array[i][1]);
			}
			pointCalculator(array,score,player);


		}
		players++;
	}
	rounds++;
}


void pointCalculator(int array[5][2],int score[MAX_PLAYERS][15],int player){
	printf("These are the possible scoring. Type the number where you want your points to go to.\n1. Ones\n2. Twos\n3. Threes\n4. Fours\n5. Fives\n6. Sixes\n7. Three of a Kind\n8. Four of a Kind9. Full House\n10. Short Straight\n11. Long Stright\n12. Yahtzee\n13. Chance");
		





int main(){
	char playerNames[MAX_PLAYERS][MAX_NAME_LENGTH];
	int numPlayers;

	printf("Enter the number of players (up to %d): ", MAX_PLAYERS);
	scanf("%d", &numPlayers);

	if(numPlayers < 1 || numPlayers > MAX_PLAYERS){
		fprintf(stderr, "Invalid number of players. Exiting. . .\n");
		return 1;
	}

	while (getchar() != '\n');

	for(int i = 0; i < numPlayers; i++){
		printf("Enter the name of Player %d: ", i + 1);
		fgets(playerNames[i], MAX_NAME_LENGTH, stdin);

		size_t len = strlen(playerNames[i]);
		if(len > 0 && playerNames[i][len - 1] == '\n'){
			playerNames[i][len - 1] = '\0';
		}
	}

	printf("\nPlayer Names:\n");
	for(int i = 0; i < numPlayers; ++i){
		printf("Player %d: %s\n", i + 1, playerNames[i]);
	}

	int score[numPlayers][15];
        //int *scoreptr = score;
	commands();
	//rules();

	yahtzee(score,playerNames,numPlayers);



	return 0;
}




